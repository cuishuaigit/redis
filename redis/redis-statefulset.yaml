apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: kafka
  labels:
    app: redis
spec:
  ports:
    - port: 6379
      name: server
  clusterIP: None
  selector:
    app: redis
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: kafka
spec:
  selector:
    matchLabels:
      app: redis
  serviceName: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      terminationGracePeriodSeconds: 20
      initContainers:
      - name: redis-conf
        imagePullPolicy: Always
        image: fastop/busybox:redis-conf
        command:
        - cp
        - "/redis.conf"
        - "/data"
        volumeMounts:
        - name: data
          mountPath: "/data"
      volumes:
      - name: data
        emptyDir: {}
      containers:
      - name: redis
        image: bitnami/redis:5.0-debian-9
        resources:
          requests:
            memory: "300Mi"
            cpu: 100m
          limits:
            memory: "500Mi"
            cpu: 200m
        command:
        - redis-server
        - "/data/redis.conf"
        volumeMounts:
        - name: datadir
          mountPath: /redis-dev
        - name: data
          mountPath: /data
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: ["ReadWriteMany"]
      storageClassName: nfs-storage
      resources:
        requests:
          storage:  300Mi
